{#
==================================================
    Videos (videos)
    Variable:
        - Block (Block)

    Fields:
        Content:
        	- Heading (heading)
        	- Sub Heading (subHeading)
            - Text (text)
            - Buttons (buttons) [Neo]
                - Button (button)
                - Icon (icon)
                - Button Type (buttonType)
                - Color (color)
            - Childs:
            	- Video (basicVideo)
                    - Image (image)
                    - Video URL (videoUrl)

        Settings:
        	- Heading Size (headingSize)
            - Text Alignment (textAlignment)
            - Heading Border? (headingBorder)

        Animation Styles:
            - Animation (animation)
            - Content Animation Style (contentAnimationStyle)
            - Content Animation Easing (contentAnimationEasing)
            - Content Animation Duration (contentAnimationDuration)
            - Content Animation Offset (contentAnimationOffset)

        Spacing:
        	- Margin Top (marginTop)
        	- Margin Bottom (marginBottom)
        	- Padding Top (paddingTop)
        	- Padding Bottom (paddingBottom)
==================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import '_includes/macros' as render %}

{% set section = entry.section.handle %}
{% set videoLayout = block.videoLayout.value|default('slider') %}
{% set perRowLimit = block.perRowLimit.value|default('3') %}
{% set parent = block.parent.type.handle|default(null) %}
{% set headingSize = block.headingSize.value|default('h2') %}
{% set headingAlignment = block.textAlignment.value|default(videoLayout == 'slider' ? 'center' : 'start') %}
{% set sectionTag = parent == 'container' ? 'div' : 'section' %}
{% set backgroundColor = render.color({
    handle :  currentBgColor,
    swatch : 'background'
}) %}

{# Animation #}
{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.contentAnimationStyle.value|default('fade-up'),
    animationDuration: block.contentAnimationDuration.value|default(500),
    animationOffset: block.contentAnimationOffset.value|default(null),
    animationEasing: block.contentAnimationEasing.value|default(null)
}) | raw %}

<{{ sectionTag }} class="{{ backgroundColor }} {{ spacing.implode(' ') }}">
    <div class="container">
        {% if block.heading|length or block.subHeading|length or block.text|length %}
        <div class="col-lg-10 col-12 mx-auto">
            {% if block.heading|length or block.subHeading|length %}
            <div class="{{ headingAlignment != 'start' ? 'section-title' }} {{ 'text-' ~ headingAlignment }}">
                {% if block.heading|length %}
                <h2 class="{{ headingSize }} {{ block.headingBorder ? 'decorated-title' }} {{ headingAlignment == 'center' ? 'decorated-center' }}" {{ contentAnimation|raw }}>
                    {{ block.heading|nl2br }}
                </h2>
                {% endif %}

                {% if block.subHeading|length %}
                <span class="subhead" {{ contentAnimation|raw }}>
                    {{ block.subHeading|nl2br }}
                </span>
                {% endif %}
            </div>
            {% endif %}

            {% if block.text|length %}
            <div class="post__body blog-list" {{ contentAnimation|raw }}>
                {{ render.replaceElements(block.text, {
                    'p': 'text-black'
                }) }}
            </div>
            {% endif %}
        </div>
        {% endif %}

        {% for video in block.children.all() %}
        {% if loop.first %}
        <div class="{{ videoLayout == 'slider' ? 'video-slider videoPreviewLimit' : 'video-layout-card' }} video-layout mb-30" data-layout="{{ videoLayout == 'slider' ? 'video-slider' : 'video-layout-card' }}" data-limit="{{ perRowLimit }}" {{ contentAnimation|raw }}>
            <div class="{{ videoLayout == 'slider' ? 'swiper-wrapper' : 'row justify-content-center' }}">
        {% endif %}
                {% set cardLimit = perRowLimit == '3' ? 'col-lg-4 col-md-4 col-6' : (perRowLimit == '4' ? 'col-lg-3 col-md-3 col-6' : (perRowLimit == '2' ? 'col-lg-6 col-md-6 col-12' : 'col-12')) %}
                <div class="{{ videoLayout == 'slider' ? 'swiper-slide' : cardLimit ~ ' py-10' }} video-card">
                    <div class="card {{ videoLayout == 'card' ? 'mx-0 mw-100' }} {{ videoLayout == 'slider' and (perRowLimit == '2' or perRowLimit == '1') ? 'mw-100' }}">
                        <div class="card-media image-wrapper">
                            {% set image = video.image.one() %}
                            {% if image|length %}
                                {% set params = {
                                    image: image,
                                    alt: image.title,
                                    class: 'card-thumb',
                                    width: image.width,
                                    height: image.height
                                } %}
                                {{ render.setImage(params) }}
                            {% endif %}

                            {% if video.youtubeId|length %}
                            <button class="video-play">
                                <svg width="30" height="30" fill="#fff" class="position-absolute" style="left: 18px; top: 16px;"><use xlink:href="#hero-play"></use></svg>
                                <span class="visually-hidden">Play video 1</span>
                            </button>
                            <div class="video-wrap" data-url="{{ video.youtubeId }}"></div>
                            {% endif %}
                        </div>

                        {% if video.heading|length or video.subHeading|length %}
                        <div class="card-body">
                            {% if video.heading|length %}
                                <h3 class="card-title">{{ video.heading|nl2br }}</h3>
                            {% endif %}

                            {% if video.subHeading|length %}
                            <p class="card-text">
                                {{ video.subHeading|nl2br }}
                            </p>
                            {% endif %}
                        </div>
                        {% endif %}
                    </div>
                </div>
        {% if loop.last %}
            </div>
            {% if videoLayout == 'slider' %}
            <button class="swiper-btn swiper-btn-prev {{ perRowLimit == '2' or perRowLimit == '3' ? 'slider-button-center' : (perRowLimit == '1' ? 'slider-button') }}"><svg width="45" height="45" fill="currentColor"><use xlink:href="#arrow-left"></use></svg><span class="visually-hidden">Previous slide</span></button>
            <button class="swiper-btn swiper-btn-next {{ perRowLimit == '2' or perRowLimit == '3' ? 'slider-button-center' : (perRowLimit == '1' ? 'slider-button') }}"><svg width="45" height="45" fill="currentColor"><use xlink:href="#arrow-right"></use></svg><span class="visually-hidden">Next slide</span></button>
            {% endif %}
        </div>
        {% endif %}
        {% endfor %}

        {% for button in block.buttons.all() %}
        {% set linkIcon = not button.icon.icon|length and button.buttonType.value == 'link' ? true : false %}
        {% if loop.first %}
        <div class="buttons-wrapper justify-content-{{ headingAlignment }}" {{ contentAnimation|raw }}>
        {% endif %}
            {{ render.createButton({
                button: button.button,
                type: button.buttonType.value|default("button"),
                class: '',
                icon: button.icon,
                linkIcon: linkIcon,
                color: button.color.label|default("Green")
            }) }}
        {% if loop.last %}
        </div>
        {% endif %}
        {% endfor %}
    </div>
</{{ sectionTag }}>

<script src="https://www.youtube.com/iframe_api"></script>
