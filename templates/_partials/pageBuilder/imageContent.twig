{#
========================================
    Image Content (imageContent)

    Variables
        - Block (block)

    Fields:
        Content:
            - Image (image)
            - Heading (heading)
            - Sub Heading (subHeading)
            - Text (text)
            - Buttons (buttons) [Neo]
                - Button (button)
                - Icon (icon)
                - Button Type (buttonType)
                - Color (color)

        Settings:
        	- Image Content Layout (imageContentLayout)
        	- Background Color (backgroundColor)
            - Heading Size (headingSize)
            - Text Alignment (textAlignment)
            - Heading Border? (headingBorder)

        Animation Styles:
            - Animation (animation)
            - Animation Style (animationStyle)
            - Animation Easing (animationEasing)
            - Animation Duration (animationDuration)
            - Animation Offset (animationOffset)
            - Content Animation Style (contentAnimationStyle)
            - Content Animation Easing (contentAnimationEasing)
            - Content Animation Duration (contentAnimationDuration)
            - Content Animation Offset (contentAnimationOffset)

        Spacing:
        	- Margin Top (marginTop)
        	- Margin Bottom (marginBottom)
        	- Padding Top (paddingTop)
        	- Padding Bottom (paddingBottom)
========================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_includes/macros" as render %}

{% set parent = block.parent.type.handle|default(null) %}
{% set section = entry.section.handle|default(null) %}
{% set headingSize = block.headingSize.value|default('h2') %}
{% set headingAlignment = block.textAlignment.value|default('start') %}
{% set defaultLayout =  parent == 'container' ? 'squareImageLeftContentRight' : 'circleImageLeftContentRight' %}
{% set imageContentLayout = block.imageContentLayout.value|default(defaultLayout) %}

{% set backgroundColor = render.color({
    handle :  currentBgColor,
    swatch : 'background'
}) %}

{# Animation #}
{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.contentAnimationStyle.value|default('fade-right'),
    animationDuration: block.contentAnimationDuration.value|default(500),
    animationOffset: block.contentAnimationOffset.value|default(null),
    animationEasing: block.contentAnimationEasing.value|default(null)
}) | raw %}

{% set imageAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-left'),
    animationDuration: block.animationDuration.value|default(500),
    animationOffset: block.animationOffset.value|default(null),
    animationEasing: block.AnimationEasing.value|default(null)
}) | raw %}

{% set sectionTag = parent == 'container' ? 'div' : 'section' %}
<{{ sectionTag }} class="{{ spacing.implode(' ') }} {{ backgroundColor }}">
	<div class="container">
		<div class="post row{{ imageContentLayout == 'squareImageRightContentLeft' ? ' post-reverse ' }}{{ imageContentLayout == 'circleImageRightContentLeft' or imageContentLayout == 'circleImageLeftContentRight' ? ' post-rounded ' }}{{ imageContentLayout == 'circleImageRightContentLeft' ? ' flex-row-reverse' }} {{ backgroundColor == 'bg-gray' ? 'svg-white' }}">
			{% set image = block.image.one() %}
			{% if image|length %}
			<div class="{{ imageContentLayout == 'circleImageRightContentLeft' or imageContentLayout == 'circleImageLeftContentRight' ? 'col-lg-4' : 'col-md-6' }} mb-30 mb-lg-0" {{ imageAnimation|raw }}>
				<div class="post__image">
					{% set params = {
						image: image,
						alt: image.title,
						srcSet: false,
						width: image.width,
						height: image.height
					} %}
					{{ render.setImage(params) }}
				</div>
			</div>
			{% endif %}

			{% if block.heading|length or block.subHeading|length or block.text|length or block.buttons|length %}
			<div class="{{ imageContentLayout == 'circleImageRightContentLeft' or imageContentLayout == 'circleImageLeftContentRight' ? 'col-lg-8' : 'col-md-6' }} {{ 'text-' ~ headingAlignment }}">
				<div class="post__text">
					{% if block.heading|length or block.subHeading|length %}
					<div class="{{ headingAlignment == 'center' ? 'decorated-center' : (headingAlignment == 'end' ? 'border-right') }} {{ not block.headingBorder ? 'pb-10 position-relative' : 'decorated-title' }}">
						{% if block.heading|length %}
						<h2 class="mb-15 {{ headingSize }}" {{ contentAnimation|raw }}>
							{{ block.heading|nl2br }}
						</h2>
						{% endif %}

						{% if block.subHeading|length %}
						<span class="subhead" {{ contentAnimation|raw }}>
							{{ block.subHeading|nl2br }}
						</span>
						{% endif %}
					</div>
					{% endif %}

					{% if block.text|length %}
					<div class="post__body blog-list" {{ contentAnimation|raw }}>
						{{ render.replaceElements(block.text, {
							'p' : 'text-black mb-2'
						}) }}
					</div>
					{% endif %}

					{% if block.buttons|length %}
					{% for button in block.buttons.all() %}
					{% if loop.first %}
					{% set alignment = headingAlignment == 'left' ? 'start' : headingAlignment %}
					{% set linkIcon = not button.icon.icon|length and button.buttonType.value == 'link' ? true : false %}
					<div class="buttons-wrapper justify-content-{{ alignment }}" {{ contentAnimation|raw }}>
					{% endif %}
					    {{ render.createButton({
					        button: button.button,
					        type: button.buttonType.value|default("button"),
					        class: '',
					        icon: button.icon,
					        linkIcon: linkIcon,
					        color: button.color.label|default("Green")
					    }) }}
					{% if loop.last %}
					</div>
					{% endif %}
					{% endfor %}
					{% endif %}
				</div>
			</div>
			{% endif %}
		</div>
	</div>
</{{ sectionTag }}>