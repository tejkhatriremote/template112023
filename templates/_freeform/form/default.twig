{{ craft.app.config.general.devMode ? ('<!-- Template: _freeform/form/_default.twig -->') | raw }}
{% css %}
    .required::after {content: "*"; color: #d00; margin-left: 5px;}
    .alert-red {color: #721c24;background-color: #f8d7da;border-color: #ed7683;}
    .alert-red p {margin-bottom: 0 !important;}
    .alert-success p {margin-bottom: 0 !important;}
    .text-red {color: #ff1d32}
{% endcss %}

{{ form.renderTag({ id: "data-" ~ form.handle, class: "contact-form freeform formId jsFreeform"}) | replace({
    'for="freeform_form_handle"' : 'for="freeform_form_handle_' ~ form.handle ~ '"',
    'id="freeform_form_handle"'  : 'id="freeform_form_handle_' ~ form.handle ~ '"'
}) }}

{# Set styling for Ajax responses #}
<script>
  var form = document.querySelector('[data-id="{{ form.anchor }}"]');
  if (form) {
    form.addEventListener("freeform-ready", function (event) {
        var freeform = event.target.freeform;

        freeform.setOption("errorClassBanner", ["alert", "alert-red", "mb-19"]);
        freeform.setOption("errorClassList", ["errors", "text-red", "text-base", "mt-2", "list-unstyled"]);
        freeform.setOption("errorClassField", ["border-red-500"]);
        freeform.setOption("successClassBanner", ["alert", "alert-success", "mb-19"]);

        freeform.addOnSuccessfulAjaxSubmit((event, form, response) => {
            if (returnUrl_{{ form.id }} != '') {
                window.location.href = response.returnUrl;
            }
        });
    })
    var returnUrl_{{ form.id }} = '';
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
                var response = JSON.parse(this.responseText);
                form.querySelector('input[name=formHash]').value = response.hash;
                var csrf = response.csrf;
                form.querySelector('input[name=' + csrf.name + ']').value = csrf.value;
                returnUrl_{{ form.id }} = response.returnUrl;
            }
        };
    xhttp.open("GET", "/dynamic/refresh-tokens?form={{ form.handle }}", true);
    xhttp.send();
  }
</script>

{# Render tabs for pages #}
{% if form.pages|length > 1 %}
    <ul class="flex border-b">
        {% for page in form.pages %}
            <li class="mr-1">
                <a class="{{ form.currentPage.index == page.index ? 'bg-white inline-block border-l border-t border-r rounded-t py-2 px-4 text-blue-700 font-semibold' : 'bg-white inline-block py-2 px-4 text-gray-400 font-semibold disabled' }}">{{ page.label }}</a>
            </li>
        {% endfor %}
    </ul>
{% endif %}

{# Render errors #}
{% if form.hasErrors %}
    <div class="alert alert-red" role="alert">
        <strong class="font-bold">{{ "Error! Please review the form and try submitting again."|t('freeform') }}</strong>
        {% if form.errors|length %}
            <ul class="mb-0 ">
                {% for error in form.errors %}
                    <li>{{ error }}</li>
                {% endfor %}
            </ul>
        {% endif %}
    </div>
{% endif %}

{# Define standard field classes #}
{% set standardFieldClasses = "form-control" %}
{% set selectFieldClasses = "form-select" %}
{% set checkboxFieldClasses = "bg-aqua-haze-100 border border-aqua-haze-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-aqua-haze-500" %}
{% set fileFieldClasses = "appearance-none block w-full py-3 leading-tight" %}
{% set tableFieldClasses = "appearance-none w-full py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-aqua-haze-500" %}
{% set signatureFieldClasses = "bg-aqua-haze-200 hover:bg-aqua-haze-400 text-black font-normal py-1 px-2 rounded mr-1" %}
{% set standardLabelsClasses = "form-label" %}

{# Render form rows #}
<div class="row g-15 mb-15">
{% for row in form %}
    {% for field in row %}
        {# Calculate column class based on columns count #}
        {% set columnCount = row|length %}
        {% set indexCount = loop.index %}
        {% set columnClass = "col-12" %}
        {% set columnClass = columnClass ~ form.customAttributes.columnClass %}

        {% if columnCount > 1 %}
            {% set columnClass = columnCount == '2' ? 'col-lg-6 col-md-6 col-12' : (columnCount == '3' ? 'col-lg-4 col-md-4 col-12' : (columnCount ? '4' ? 'col-lg-3 col-md-6 col-12' : 'col-12')) %}
        {% else %}
            {% set columnClass = columnClass ~ " w-100" %}
        {% endif %}

        {# Set a custom column class for the submit button #}
        {% if field.type == "submit" %}
            {% set columnClass = columnClass ~ " text-" ~ field.position %}
        {% endif %}

        {# Set field class based on field type #}
        {% set fieldClass = standardFieldClasses %}

        {% switch field.type %}
            {% case "select" %}
                {% set fieldClass = selectFieldClasses %}
            {% case "checkbox" %}
                {% set fieldClass = checkboxFieldClasses %}
            {% case "mailing_list" %}
                {% set fieldClass = checkboxFieldClasses %}
            {% case "file" %}
                {% set fieldClass = fileFieldClasses %}
            {% case "table" %}
                {% set fieldClass = tableFieldClasses %}
            {% case "signature" %}
                {% set fieldClass = signatureFieldClasses %}
            {% case "signature" %}
                {% set fieldClass = signatureFieldClasses %}
        {% endswitch %}

        {% set fieldClass = fieldClass ~ (field.hasErrors ? " border-red-500") %}

        {# Set label class #}
        {% set labelClass = standardLabelsClasses %}
        {% set labelClass = labelClass ~  (field.required ? " required" : "") %}

        {# Set error class #}
        {% set errorClass = "text-red text-base italic" %}

        {# Set instructions class #}
        {% set instructionClass = "text-black text-base" %}


        {# Create a column except when creating Freeform Payments columns #}
        {% if field.type != 'cc_details' %}
        <div class="{{ columnClass }}"{{ field.rulesHtmlData }}>
        {% endif %}
            {% if field.type == "checkbox_group" %}

                {{ field.renderLabel({
                    labelClass: labelClass,
                    instructionsClass: instructionClass,
                    errorClass: errorClass,
                }) }}

                {% for index, option in field.options %}
                    <div>
                        <input type="checkbox"
                               name="{{ field.handle }}[]"
                               value="{{ option.value }}"
                               id="{{ field.idAttribute }}-{{ index }}"
                               class="form-check-input{{ field.hasErrors ? " border-red-500" }}"
                                {{ option.checked ? "checked" : "" }}
                        />

                        <label class="form-check-label" for="{{ field.idAttribute }}-{{ index }}">
                            {{ option.label|t|raw }}
                        </label>
                    </div>
                {% endfor %}

                {{ field.renderInstructions() }}
                {{ field.renderErrors({ errorClass: errorClass }) }}

            {% elseif field.type == "radio_group" %}

                {{ field.renderLabel({
                    labelClass: labelClass ~ 'form-check-label',
                    instructionsClass: instructionClass,
                    errorClass: errorClass,
                }) }}

                {% for index, option in field.options %}
                {% if loop.first and loop.length > '3' %}
                <div class="mb-8 mt-2 radio-group flex flex-wrap">
                {% endif %}
                    <div class="radio-item {{ loop.first ? 'mt-2' }} mb-2 flex justify-start lg:w-1/2 w-full">
                        <input type="radio"
                               name="{{ field.handle }}"
                               value="{{ option.value }}"
                               id="{{ field.idAttribute }}-{{ index }}"
                               class="form-check-input"
                                {{ option.checked ? "checked" : "" }}
                        />
                        <label class="text-xl" for="{{ field.idAttribute }}-{{ index }}">
                            {{ option.label|t|raw }}
                        </label>
                    </div>
                {% if loop.last and loop.length > '3' %}
                </div>
                {% endif %}
                {% endfor %}

                {{ field.renderInstructions() }}
                {{ field.renderErrors() }}

            {% elseif field.type == "dynamic_recipients" and (field.showAsRadio or field.showAsCheckboxes) %}

                {{ field.renderLabel({
                    labelClass: labelClass,
                    instructionsClass: instructionClass,
                    errorClass: errorClass,
                }) }}

                {{ field.oneLine ? "<div>"|raw }}

                {% for index, option in field.options %}
                    <div class="form-check{{ field.oneLine ? " form-check-inline" }}">
                        <input type="{{ field.showAsRadio ? "radio" : "checkbox" }}"
                               name="{{ field.handle }}[]"
                               value="{{ loop.index0 }}"
                               class="form-check-input"
                               id="{{ field.idAttribute }}-{{ index }}"
                                {{ option.checked ? "checked" : "" }}
                        />

                        <label class="form-check-label" for="{{ field.idAttribute }}-{{ index }}">
                            {{ option.label|t|raw }}
                        </label>
                    </div>
                {% endfor %}

                {{ field.oneLine ? "</div>"|raw }}

                {{ field.renderInstructions() }}
                {{ field.renderErrors() }}

            {% elseif field.type == "dynamic_recipients" and (field.showAsSelect) %}

                {{ field.renderLabel({
                    labelClass: labelClass,
                    instructionsClass: instructionClass,
                    errorClass: errorClass,
                }) }}

                <div class="relative">
                    <select name="{{ field.handle }}" id="{{ field.idAttribute }}" class="{{ fieldClass }}">
                    {% for index, option in field.options %}
                        <option value="{{ loop.index0 }}"{{ option.checked ? " selected" : "" }}>{{ option.label|t|raw }}</option>
                    {% endfor %}
                    </select>
                </div>

                {{ field.renderInstructions() }}
                {{ field.renderErrors() }}

            {% elseif field.type == "select" %}
                <div class="input-wrapper">
                    {{ field.renderLabel({
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        errorClass: errorClass,
                    }) }}

                    <div class="relative">
                        <select name="{{ field.handle }}" id="{{ field.idAttribute }}" class="{{ fieldClass }}">
                        {% for option in field.options %}
                            <option value="{{ option.value }}"{{ option.checked ? " selected" : "" }}>{{ option.label|t|raw }}</option>
                        {% endfor %}
                        </select>
                    </div>

                    {{ field.renderInstructions() }}
                    {{ field.renderErrors() }}
                </div>

            {% elseif field.type in ["checkbox", "mailing_list"] %}

                <div class="checkbox-item mb-2 flex justify-start">
                    {{ field.renderInput({ class: 'h-5 w-5 mr-2 ' ~ fieldClass ~ (field.hasErrors ? " border-red-500") }) }}
                    {{ field.renderLabel({ labelClass: 'text-md' ~ (field.hasErrors ? " border-red-500") }) }}
                    {{ field.renderErrors({ errorClass: errorClass }) }}
                </div>

            {% elseif field.type == "submit" %}

                {{ field.render({ class: " btn btn-primary" }) }}

            {% elseif field.type == "cc_details" %}

                {# FOR FREEFORM PAYMENTS #}

                {{ field.renderLabel({
                    labelClass: labelClass,
                    instructionsClass: instructionClass,
                    errorClass: errorClass,
                }) }}

                {% for layoutRow in field.layoutRows %}

                    {% set columnCount = layoutRow|length %}

                    {% set columnClass = "w-full px-3 mb-6 md:mb-0" %}
                    {% set columnClass = columnClass ~ form.customAttributes.columnClass %}

                    {% if columnCount > 1 %}
                        {% set columnClass = columnClass ~ " md:w-1/" ~ columnCount ~ " lg:w-1/" ~ columnCount ~ " xl:w-1/" ~ columnCount %}
                    {% else %}
                        {% set columnClass = columnClass ~ " md:w-full lg:w-full xl:w-full" %}
                    {% endif %}

                    {% for layoutField in layoutRow %}

                        {% set fieldClass = "appearance-none block w-full bg-gray-100 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" ~ (field.hasErrors ? " border-red-500") %}

                        <div class="payments-column-class {{ columnClass }}">
                        {{ layoutField.render({
                            class: (loop.parent.loop.last ? fieldClass: fieldClass ~ " mb-6"),
                            instructionsClass: instructionClass,
                            instructionsBelowField: true,
                            labelClass: labelClass,
                            errorClass: errorClass,
                        }) }}
                        </div>

                    {% endfor %}
                {% endfor %}

                {{ field.renderInput({
                    instructionsClass: instructionClass,
                    instructionsBelowField: true,
                    labelClass: labelClass,
                    errorClass: errorClass,
                }) }}

                {{ field.renderInstructions }}
                {{ field.renderErrors }}

            {% else %}
                <div class="input-wrapper">
                    {{ field.render({
                        class: fieldClass,
                        value: 'dfdsf',
                        labelClass: labelClass,
                        instructionsClass: instructionClass,
                        instructionsBelowField: true,
                        errorClass: errorClass,
                        placeholder: field.placeholder|t
                    }) }}
                </div>

            {% endif %}

        {# Close a column except when creating Freeform Payments columns #}
        {% if field.type != 'cc_details' %}
        </div>
        {% endif %}
    {% endfor %}
{% endfor %}
</div>

{{ form.renderClosingTag }}